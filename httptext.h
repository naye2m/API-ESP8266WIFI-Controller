// const char* homeHTML = "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n <title>ESP8266 API Controller</title>\n <style>\n body {\n font-family: Arial, sans-serif;\n margin: 20px;\n }\n h1 {\n color: #333;\n }\n .container {\n margin-top: 20px;\n }\n .section {\n margin-bottom: 20px;\n }\n .button {\n margin: 5px;\n padding: 10px;\n border: none;\n border-radius: 5px;\n background-color: #007BFF;\n color: white;\n cursor: pointer;\n }\n .button:hover {\n background-color: #0056b3;\n }\n input[type=\"text\"], input[type=\"number\"], select {\n margin: 5px;\n padding: 10px;\n border-radius: 5px;\n border: 1px solid #ddd;\n }\n textarea {\n margin: 5px;\n padding: 10px;\n border-radius: 5px;\n border: 1px solid #ddd;\n width: 100%;\n height: 100px;\n }\n .response {\n margin-top: 10px;\n padding: 10px;\n border: 1px solid #ddd;\n border-radius: 5px;\n background-color: #f8f9fa;\n }\n </style>\n</head>\n<body>\n <h1>ESP8266 API Controller</h1>\n\n <div class=\"container\">\n <div class=\"section\">\n <h2>LED Control</h2>\n <button class=\"button\" onclick=\"sendRequest('/led/on')\">Turn LED On</button>\n <button class=\"button\" onclick=\"sendRequest('/led/off')\">Turn LED Off</button>\n <button class=\"button\" onclick=\"sendRequest('/led/blink?times=5')\">Blink LED</button>\n <input type=\"number\" id=\"ledBrightness\" placeholder=\"Brightness (0-255)\">\n <button class=\"button\" onclick=\"setLEDBrightness()\">Set LED Brightness</button>\n </div>\n\n <div class=\"section\">\n <h2>Display Control</h2>\n <textarea id=\"displayText\" placeholder=\"Enter text to display\"></textarea>\n <input type=\"number\" id=\"textSize\" placeholder=\"Text Size (1-3)\">\n <input type=\"number\" id=\"textX\" placeholder=\"X Position\">\n <input type=\"number\" id=\"textY\" placeholder=\"Y Position\">\n <button class=\"button\" onclick=\"displayText()\">Display Text</button>\n <button class=\"button\" onclick=\"sendRequest('/cleanDisplay')\">Clear Display</button>\n <input type=\"checkbox\" id=\"clearBeforeRender\"> Clear Before Render\n <button class=\"button\" onclick=\"setClearBeforeRender()\">Set Clear Before Render</button>\n </div>\n\n <div class=\"section\">\n <h2>Pixel Control</h2>\n <input type=\"number\" id=\"pixelX\" placeholder=\"X Position\">\n <input type=\"number\" id=\"pixelY\" placeholder=\"Y Position\">\n <input type=\"number\" id=\"pixelState\" placeholder=\"State (0=Off, 1=On)\">\n <button class=\"button\" onclick=\"setPixel()\">Set Pixel</button>\n </div>\n\n <div class=\"section\">\n <h2>Shape Drawing</h2>\n <select id=\"shapeType\">\n <option value=\"rect\">Rectangle</option>\n <option value=\"circle\">Circle</option>\n </select>\n <input type=\"number\" id=\"shapeX\" placeholder=\"X Position\">\n <input type=\"number\" id=\"shapeY\" placeholder=\"Y Position\">\n <input type=\"number\" id=\"shapeW\" placeholder=\"Width/Radius\">\n <input type=\"number\" id=\"shapeH\" placeholder=\"Height (only for rectangle)\">\n <button class=\"button\" onclick=\"drawShape()\">Draw Shape</button>\n </div>\n\n <div class=\"section\">\n <h2>Text Animation</h2>\n <textarea id=\"animateText\" placeholder=\"Enter text to animate\"></textarea>\n <input type=\"number\" id=\"animateSize\" placeholder=\"Text Size (1-3)\">\n <input type=\"number\" id=\"animateY\" placeholder=\"Y Position\">\n <input type=\"number\" id=\"animateRepeats\" placeholder=\"Repeats (1-10)\">\n <button class=\"button\" onclick=\"animateText()\">Animate Text</button>\n </div>\n\n <div class=\"section\">\n <h2>2D Array Control</h2>\n <textarea id=\"displayArray\" placeholder=\"Enter 128x64 array data as a binary string\"></textarea>\n <button class=\"button\" onclick=\"set2DArray()\">Set 2D Array</button>\n </div>\n </div>\n\n <div id=\"response\" class=\"response\"></div>\n\n <script>\n async function func(b) {return await sendRequest(\"/func\",\"POST\",b,console.log);} \n async function sendRequest(endpoint, method = 'GET', body = null,outfunc=alert) {\nlet options = { method };\nif (body) {\noptions.headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\noptions.body = new URLSearchParams(body).toString();\n}\n\ntry {\nconst response = await fetch(endpoint, options);\nconst data = await response.text();\noutfunc(data);  // Display response in an alert box\n} catch (error) {\nalert('Error: ' + error);\n}\n}\n \n function setLEDBrightness() { \n const brightness = document.getElementById('ledBrightness').value; \n if (brightness !== '') { \n sendRequest('/led/brightness', 'POST', { level: brightness }); \n } \n } \n \n function displayText() { \n const text = document.getElementById('displayText').value; \n const size = document.getElementById('textSize').value; \n const x = document.getElementById('textX').value; \n const y = document.getElementById('textY').value; \n const params = { \n plain: text, \n size: size, \n x: x, \n y: y \n }; \n sendRequest('/display', 'POST', params); \n } \n \n function setClearBeforeRender() { \n const clear = document.getElementById('clearBeforeRender').checked; \n sendRequest('/clearBeforeRender', 'POST', { clear: clear }); \n } \n \n function setPixel() { \n const x = document.getElementById('pixelX').value; \n const y = document.getElementById('pixelY').value; \n const state = document.getElementById('pixelState').value; \n if (x !== '' && y !== '' && state !== '') { \n const params = { \n x: x, \n y: y, \n state: state \n }; \n sendRequest('/pixel', 'POST', params); \n } \n } \n \n function drawShape() { \n const type = document.getElementById('shapeType').value; \n const x = document.getElementById('shapeX').value; \n const y = document.getElementById('shapeY').value; \n const w = document.getElementById('shapeW').value; \n const h = document.getElementById('shapeH').value; \n let params = ''; \n if (type === 'rect') { \n if (x !== '' && y !== '' && w !== '' && h !== '') { \n params = { \n type: 'rect', \n x: x, \n y: y, \n w: w, \n h: h \n }; \n } \n } else if (type === 'circle') { \n if (x !== '' && y !== '' && w !== '') { \n params = { \n type: 'circle', \n x: x, \n y: y, \n r: w \n }; \n } \n } \n if (params) { \n sendRequest('/shape', 'POST', params); \n } \n } \n \n function animateText() { \n const text = document.getElementById('animateText').value; \n const size = document.getElementById('animateSize').value; \n const y = document.getElementById('animateY').value; \n const repeats = document.getElementById('animateRepeats').value; \n if (text !== '') { \n const params = { \n text: text, \n size: size, \n y: y, \n repeats: repeats \n }; \n sendRequest('/animateText', 'POST', params); \n } \n } \n \n function set2DArray() { \n const arrayData = document.getElementById('displayArray').value; \n if (arrayData !== '') { \n const params = { plain: arrayData }; \n sendRequest('/setArray', 'POST', params); \n } \n } \n</script>\n</body>\n</html>";
String homeHTML = R"HTML(
  <!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width,initial-scale=1"> <title>ESP8266 API Controller</title> <style>body{font-family:Arial,sans-serif;margin:20px}h1{color:#333}.container{margin-top:20px}.section{margin-bottom:20px}.button{margin:5px;padding:10px;border:none;border-radius:5px;background-color:#007bff;color:#fff;cursor:pointer}.button:hover{background-color:#0056b3}input[type=number],input[type=text],select{margin:5px;padding:10px;border-radius:5px;border:1px solid #ddd}textarea{margin:5px;padding:10px;border-radius:5px;border:1px solid #ddd;width:100%;height:100px}.response{margin-top:10px;padding:10px;border:1px solid #ddd;border-radius:5px;background-color:#f8f9fa}</style> </head> <body> <h1>ESP8266 API Controller</h1> <div class="container"> <div class="section"> <h2>LED Control</h2> <button class="button" onclick='sendRequest("/led/on")'>Turn LED On</button> <button class="button" onclick='sendRequest("/led/off")'>Turn LED Off</button> <button class="button" onclick='sendRequest("/led/blink?times=5")'>Blink LED</button> <input type="number" id="ledBrightness" placeholder="Brightness (0-255)"> <button class="button" onclick="setLEDBrightness()">Set LED Brightness</button> </div> <div class="section"> <h2>Display Control</h2> <textarea id="displayText" placeholder="Enter text to display"></textarea> <input type="number" id="textSize" placeholder="Text Size (1-3)"> <input type="number" id="textX" placeholder="X Position"> <input type="number" id="textY" placeholder="Y Position"> <button class="button" onclick="displayText()">Display Text</button> <button class="button" onclick='sendRequest("/cleanDisplay")'>Clear Display</button> <input type="checkbox" id="clearBeforeRender"> Clear Before Render <button class="button" onclick="setClearBeforeRender()">Set Clear Before Render</button> </div> <div class="section"> <h2>Pixel Control</h2> <input type="number" id="pixelX" placeholder="X Position"> <input type="number" id="pixelY" placeholder="Y Position"> <input type="number" id="pixelState" placeholder="State (0=Off, 1=On)"> <button class="button" onclick="setPixel()">Set Pixel</button> </div> <div class="section"> <h2>Shape Drawing</h2> <select id="shapeType"> <option value="rect" onselect="shapeH.hidden=!1">Rectangle</option> <option value="circle" onselect="shapeH.hidden=!0">Circle</option> </select> <input type="number" id="shapeX" placeholder="X Position"> <input type="number" id="shapeY" placeholder="Y Position"> <input type="number" id="shapeW" placeholder="Width/Radius"> <input type="number" id="shapeH" placeholder="Height (only for rectangle)"> <button class="button" onclick="drawShape()">Draw Shape</button> </div> <div class="section"> <h2>Text Animation</h2> <textarea id="animateText" placeholder="Enter text to animate"></textarea> <input type="number" id="animateSize" placeholder="Text Size (1-3)"> <input type="number" id="animateY" placeholder="Y Position"> <input type="number" id="animateRepeats" placeholder="Repeats (1-10)"> <button class="button" onclick="animateText()">Animate Text</button> </div> <div class="section"> <h2>2D Array Control</h2> <textarea id="displayArray" placeholder="Enter 128x64 array data as a binary string"></textarea> <button class="button" onclick="set2DArray()">Set 2D Array</button> </div> </div>  <script>async function func(e){return await sendRequest("/func","POST",e,console.log)}async function sendRequest(e,t="GET",n=null,a=alert){let l={method:t};n&&(l.headers={"Content-Type":"application/x-www-form-urlencoded"},l.body=new URLSearchParams(n).toString());try{const t=await fetch(e,l);a(await t.text())}catch(e){alert("Error: "+e)}}function setLEDBrightness(){const e=document.getElementById("ledBrightness").value;""!==e&&sendRequest("/led/brightness","POST",{level:e})}function displayText(){sendRequest("/display","POST",{plain:document.getElementById("displayText").value,size:document.getElementById("textSize").value,x:document.getElementById("textX").value,y:document.getElementById("textY").value})}function setClearBeforeRender(){sendRequest("/clearBeforeRender","POST",{clear:document.getElementById("clearBeforeRender").checked})}function setPixel(){const e=document.getElementById("pixelX").value,t=document.getElementById("pixelY").value,n=document.getElementById("pixelState").value;if(""!==e&&""!==t&&""!==n){sendRequest("/pixel","POST",{x:e,y:t,state:n})}}function drawShape(){const e=document.getElementById("shapeType").value,t=document.getElementById("shapeX").value,n=document.getElementById("shapeY").value,a=document.getElementById("shapeW").value,l=document.getElementById("shapeH").value;let d="";"rect"===e?""!==t&&""!==n&&""!==a&&""!==l&&(d={type:"rect",x:t,y:n,w:a,h:l}):"circle"===e&&""!==t&&""!==n&&""!==a&&(d={type:"circle",x:t,y:n,r:a}),d&&sendRequest("/shape","POST",d)}function animateText(){const e=document.getElementById("animateText").value,t=document.getElementById("animateSize").value,n=document.getElementById("animateY").value,a=document.getElementById("animateRepeats").value;if(""!==e){sendRequest("/animateText","POST",{text:e,size:t,y:n,repeats:a})}}function set2DArray(){const e=document.getElementById("displayArray").value;if(""!==e){sendRequest("/setArray","POST",{plain:e})}}</script>
  )HTML";
